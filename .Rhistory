names(windowsT1)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
length(y)
head(npext)
npext
npext[30:32,]
npext$unemploy[31:nrow(npext)]
source('src/timeSeries2.r')
plot(y)
ls()
pnorm(-.364)
plot(c(-.19,-.451,-.712))
.451-.19
.712-.451
?princomp
ls()
str(dat)
str(ap)
pca <- princomp(ap)
pca <- princomp(na.omit(ap))
x
x <- cbind(rnorm(100),rnorm(100),rnorm(100))
x
pca <- princomp(x)
pca
screeplot(pca)
summary(pca)
sss <- summary(pca)
str(sss)
sss$sdev/sum(sss$sdev)
sss$sdev^2/sum(sss$sdev^2)
cumsum(sss$sdev^2/sum(sss$sdev^2))
pca$sdev
y
library(urca)
?npext
data(npext0
data(npext)
npext$unemploy
new
npext[,c('year','unemploy')]
cbind(npext[npext$year%in%1947:1988,c('year','unemploy')]
npext[npext$year%in%1947:1988,c('year','unemploy')]
head(new)
?npext
citation('urca')
unemp
unemp <- read.csv('data/unemployment.csv')
head(unemp)
unemp <- read.csv('data/unemployment.csv')
head(unemp)
unemp <- read.csv('data/unemployment.csv')
head(unemp)
nrow(unemp)
unempVec <- NULL
for(i in 1:69) unempVec <- c(unempVec,unemp[i,-1])
length(unempVec)
69*12
head(unempVec)
unempVec <- unlist(unempVec)
head(unempVec)
length(unempVec)
head(unemp)
plot(unemp)
str(unemp)
plot(unemp)
plot(unemp)
pvalsEdge
plot(pvalsEdge)
aics
which.min(aics)
which.min(bics)
dhatsEdge
pvalsEdge[7]
pvalsEdge[6]
dhatAll
dhatM2
dhatM2(pvalsEdge)
dhatM2(pvalsEdge[length(pvalsEdge):1])
pvalsEdge[1:length(pvalsEdge)]
pvalsEdge[length(pvalsEdge):1]
source('src/winSelect.r')
dhatAll(pvalsEdge,c(0.05,.25))
dhatAll(pvalsEdge,c(0.05,.25),TRUE)
length(pvalsEdge)
dhatAll(pvalsEdge,c(0.05,.25),TRUE)
dhatM2(pvalsEdge[length(pvalsEdge):1])
plot(unemp,xaxt='n')
axis('bottom',seq(1,828,12),labels=1948:2016)
length(1948:2016)
axis(1,seq(6,by=12,length=69),labels=1948:2016)
axis(1,seq(6,by=12,length=69),labels=1948:2016,ticks='no')
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016,ticks='no')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69))
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69),lty=2)
par(mfrow=c(1,1))
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69),lty=2)
plot(y)
length(y)
dhatsTot
dhatsEdge
abline(v=seq(1890,2015,by=5))
jitter(dhatsEdge)
jitter(dhatsEdge,amount=0.05)
dhats
dhats <- dhatsEdgeTS
dhats
table(dhats)
ttt['3']
ttt[paste(3)]
floor(5/2)
num <- 5
seq(-floor(num/2),by=0.1,length=num)
dhats
dhatsEdgeTS
color    <- function (plot.it=F,locate=0)
 {
 if(!plot.it)
   {
   return(.Internal(colors())) # so far, not different from colors()
   } # close on if
 else
   {
   ytop    <- rep(seq(1/26,1,by=1/26),each=26)[1:657]
   ybottom <- rep(seq(0,1-1/26,by=1/26),each=26)[1:657]
   xleft   <- rep(seq(0,1-1/26,by=1/26),times=26)[1:657]
   xright  <- rep(seq(1/26,1,by=1/26),times=26)[1:657]
   pall    <- round(col2rgb(colors())/256)
   pall    <- colSums(pall) ; pall2 <- character(0)
   pall2[pall>0]   <- "black"
   pall2[pall==0]  <- "white"

   par(mar=c(0,0,1,0))

   plot.new()
   title(main="Palette of colors()")
   rect(xleft,ybottom,xright,ytop,col=colors())
   text(x=xleft+((1/26)/2)
   ,y=ytop-((1/26)/2)
   ,labels = 1:657
   ,cex=0.55
   ,col=pall2)

   } # close on else
   if(locate==0) print("Palette of colors()")
   else
   {
   colmat    <- matrix(c(1:657,rep(NA,26^2-657)),byrow=T,ncol=26,nrow=26)
   cols        <- NA
   i        <- NA
   for(i in 1:locate)
   {
   h    <- locator(1)
   if(any(h$x<0,h$y<0,h$x>1,h$y>1)) stop("locator out of bounds!")
   else
   {
   cc        <- floor(h$x/(1/26))+1
   rr        <- floor(h$y/(1/26))+1            
   cols[i]    <- .Internal(colors())[colmat[rr,cc]]
   } # close on else
   } # close on i
   return(cols)
   } # close on else
   } # close on else+function

cols <- color(T,8)
colors()
cols
colors()[cols]
cols
cols <- c('red','turquoise','pink','green','orange','black','purple','blue')
legend('topright',legend=vapply(unique(wtplus),function(bw)

wtplus
windowsT
windowsT
plot(psT)
plot(psE)
windowsE
bws[windowsE]
windowsE
bws[0]
bws[0] <- 0
bws[0]
source('src/lso.r')
source('src/lso.r')
c(0,bws)[windowsT+1]
bws[windowsT]
floor(2/2)
rm(list=ls())
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
options()$tikzLatexPackages
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
q('no')
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
source('src/lso.r')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
TeXMetrics
traceback()
knit('sst.Rnw')
traceback()
knit('sst.Rnw')
knit('sst.Rnw')
traceback()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
opts_chunk$set(
echo=FALSE, results='asis',cache=FALSE,warning=FALSE,error=FALSE,dev='tikz',message=FALSE,autodep = TRUE
    )
opts_chunk
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
options(tikzDefaultEngine = "pdftex")
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
options( tikzLatexPackages = c(
getOption( "tikzLatexPackages" ),
             "\\usepackage{amsmath,amssymb,amsfonts,amsthm}",
  "\\newcommand{\\dalphaU}{\\bar{\\hat{d}}_\\alpha}",
"\\newcommand{\\dalphaB}{\\underline{\\hat{d}}_\\alpha}",
"\\newcommand{\\dstar}{d^*}",
"\\newcommand{\\ps}{\\bm{p}_D}",
"\\newcommand{\\dhat}{\\hat{d}}",
"\\newcommand{\\dhatU}{\\bar{\\hat{d}}}",
"\\newcommand{\\dhatB}{\\underline{\\hat{d}}}",
             "\\newcommand{\\dhatm}{\\hat{d}_M}",
             "\\usepackage[utf8]{inputenc}","\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}"
))
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
knit('test.Rnw')
q('no')
library(knitr)
knit('test.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
npext
write.table(npext,file='npext.csv',sep=',',row.names=FALSE)
write.table(npext,file='data/npext.csv',sep=',',row.names=FALSE)
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
knit('test.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
q('no')
pload('src/simulation12/results.RData')
aaa(st)
source('src/simulation12/changePointSim.r')
aaa(st)
library(ggplot2)
aaa(st)
names(st)
n=100
curv='curved'
str(run)
boxplot(run[,1])
apply(run,2,function(x) quantile(x,0.95))
run2 <- run
curv='mono'
all.equal(run,run2)
plot(run[,1],run2[,1])
aaa(st)
dat <- makeData(50,TRUE)
str(dat)
mean(dat[,1:30])
mean(dat[,31:60])
plot(apply(dat,2,mean))
curve(sin(x),-2*pi,2*pi)
x
dim(x)
plot(apply(x,2,mean))
curve(ifelse(abs(x)>10,
                            sin((x-10*sign(x))*2*pi/10),0),-30,30)
curve(ifelse(abs(x)>10,
                            sin((x-10*sign(x))*pi/10),0),-30,30)
plot(apply(x,2,mean))
mean(x[,1:30])
mean(x[,31:60])
t.test(x[,1:30],x[31:60])
for(bw in 2:30) print(test(x,bw,FALSE))
source('src/simulation26/changePointSim.r')
simOne(50,TRUE)
source('src/simulation26/changePointSim.r')
st <- simTot(1000)
aaa(st)
aaa(st)
str(st1)
str(st1)
table(st1$selector)
table(st1$method)
?position_dodge
violin3(run,10,'curved')
violin3(run,10,'curved')
names(st)
ns
facet(st,FALSE)
facet(st,FALSE)
curv <- FALSE
ns
facet(st,FALSE)
str(dat)
print(p)
facet(st,FALSE)
?facet <- wrap
?facet_wrap
facet(st,FALSE)
str(dat)
head(dat)
head(dat)
facet(st,FALSE)
facet(st,TRUE)
call.st <- "st <- simTot(1000)"
getwd()
save(list=c('ls',as.vector(lsf.str()),'call.st'),file='src/simulation26/simulation.RData')
lsf.str()
facet(st,TRUE)
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
ap
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
q('no')
knit('sst.Rnw')
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
print(load('src/simulation26/simulation.RData'))
save(list=c('st',as.vector(lsf.str()),'call.st'),file='src/simulation26/simulation.RData')
pload('results.RData')
str(results)
length(results)
names(results)
st <- results
save(list=c('st',as.vector(lsf.str()),'call.st'),file='src/simulation26/simulation.RData')
knit('sst.Rnw')
q('no')
library(knitr)
knit('sst.Rnw')
q('no')
library(knitr)
knit('sst.Rnw')
q('no')
library(knitr)
knit('sst.Rnw')
bws
q('no')
