st <- simTot(100000)
p1 <- runif(10^10,-1/4,3/4)
library(foreign)
dat <- read.dta('data/AEJApp2008-0202_data/data_for_analysis.dta')
dat2 <- read.csv('data/LindoDat.csv')
dim(dat)
dim(dat2)
names(dat2)
names(dat)
source('src/lso.r')
source('src/lso.r')
psT
psE
windowsT
source('src/lso.r')
windowsT
bws[windowsT]
bws[unique(windowsT)]
paste(1:3)
vapply(unique(windowsT),function(bw)
    do.call('paste', c(as.list(names(windowsT)[windowsT==bws[dstar]]),sep=',')),'a')
legend=vapply(unique(windowsT),function(bw)
    do.call('paste', c(as.list(names(windowsT)[windowsT==bw]),sep=',')),'a')
legend
bw
unique(windowsT)
bws[unique(windowsT)]
plot(1:10)
abline(v=c(1,2,NA))
bws[0]
bws[0.5]
windows$
windowsE
round(psT[1])
round(psT[1],3)
round(psE[1],3)
psT1
psE1
windows$1
windowsT
windowsT1
windowsT
windowsE1
windowsT1
cbind(windowsT1,windowsE1)
sum(ap$r==bws[47])
sum(ap$r==-bws[47])
round(psE1,3)
dhatM2(psE1)
dhatM2(psE1[-51])
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
psE1
knit('sst.Rnw')
knit('sst.Rnw')
bws[windowsT1['$\\dhat^{0.5,0}_M$']]
bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
bws[windowsT1['$\\dhat^{0.5,0}_M$']]
"
bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
Error: '\$' is an unrecognized escape in character string starting "'\$"
R> bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
[1] NA
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> 
bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
Error: '\$' is an unrecognized escape in character string starting "'\$"
R> bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
[1] NA
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
Error: '\$' is an unrecognized escape in character string starting "'\$"
R> bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
[1] NA
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
Error: '\$' is an unrecognized escape in character string starting "'\$"
R> bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
[1] NA
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> bws[windowsT1['\$\\dhat^{0.5,0}_M$']]
Error: '\$' is an unrecognized escape in character string starting "'\$"
R> bws[windowsT1['\\$\\dhat^{0.5,0}_M$']]
[1] NA
R> bws[windowsT1['$\\dhat^{0.5,0}_M$']]
[1] 0.155
R> 
"
"
"
"
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
names(windowsT1)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
length(y)
head(npext)
npext
npext[30:32,]
npext$unemploy[31:nrow(npext)]
source('src/timeSeries2.r')
plot(y)
ls()
pnorm(-.364)
plot(c(-.19,-.451,-.712))
.451-.19
.712-.451
?princomp
ls()
str(dat)
str(ap)
pca <- princomp(ap)
pca <- princomp(na.omit(ap))
x
x <- cbind(rnorm(100),rnorm(100),rnorm(100))
x
pca <- princomp(x)
pca
screeplot(pca)
summary(pca)
sss <- summary(pca)
str(sss)
sss$sdev/sum(sss$sdev)
sss$sdev^2/sum(sss$sdev^2)
cumsum(sss$sdev^2/sum(sss$sdev^2))
pca$sdev
y
library(urca)
?npext
data(npext0
data(npext)
npext$unemploy
new
npext[,c('year','unemploy')]
cbind(npext[npext$year%in%1947:1988,c('year','unemploy')]
npext[npext$year%in%1947:1988,c('year','unemploy')]
head(new)
?npext
citation('urca')
unemp
unemp <- read.csv('data/unemployment.csv')
head(unemp)
unemp <- read.csv('data/unemployment.csv')
head(unemp)
unemp <- read.csv('data/unemployment.csv')
head(unemp)
nrow(unemp)
unempVec <- NULL
for(i in 1:69) unempVec <- c(unempVec,unemp[i,-1])
length(unempVec)
69*12
head(unempVec)
unempVec <- unlist(unempVec)
head(unempVec)
length(unempVec)
head(unemp)
plot(unemp)
str(unemp)
plot(unemp)
plot(unemp)
pvalsEdge
plot(pvalsEdge)
aics
which.min(aics)
which.min(bics)
dhatsEdge
pvalsEdge[7]
pvalsEdge[6]
dhatAll
dhatM2
dhatM2(pvalsEdge)
dhatM2(pvalsEdge[length(pvalsEdge):1])
pvalsEdge[1:length(pvalsEdge)]
pvalsEdge[length(pvalsEdge):1]
source('src/winSelect.r')
dhatAll(pvalsEdge,c(0.05,.25))
dhatAll(pvalsEdge,c(0.05,.25),TRUE)
length(pvalsEdge)
dhatAll(pvalsEdge,c(0.05,.25),TRUE)
dhatM2(pvalsEdge[length(pvalsEdge):1])
plot(unemp,xaxt='n')
axis('bottom',seq(1,828,12),labels=1948:2016)
length(1948:2016)
axis(1,seq(6,by=12,length=69),labels=1948:2016)
axis(1,seq(6,by=12,length=69),labels=1948:2016,ticks='no')
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016,ticks='no')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69))
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69),lty=2)
par(mfrow=c(1,1))
plot(unemp,xaxt='n')
axis(1,seq(6,by=12,length=69),labels=1948:2016)
abline(v=seq(1,by=12,length=69),lty=2)
plot(y)
length(y)
dhatsTot
dhatsEdge
abline(v=seq(1890,2015,by=5))
jitter(dhatsEdge)
jitter(dhatsEdge,amount=0.05)
dhats
dhats <- dhatsEdgeTS
dhats
table(dhats)
ttt['3']
ttt[paste(3)]
floor(5/2)
num <- 5
seq(-floor(num/2),by=0.1,length=num)
dhats
dhatsEdgeTS
color    <- function (plot.it=F,locate=0)
 {
 if(!plot.it)
   {
   return(.Internal(colors())) # so far, not different from colors()
   } # close on if
 else
   {
   ytop    <- rep(seq(1/26,1,by=1/26),each=26)[1:657]
   ybottom <- rep(seq(0,1-1/26,by=1/26),each=26)[1:657]
   xleft   <- rep(seq(0,1-1/26,by=1/26),times=26)[1:657]
   xright  <- rep(seq(1/26,1,by=1/26),times=26)[1:657]
   pall    <- round(col2rgb(colors())/256)
   pall    <- colSums(pall) ; pall2 <- character(0)
   pall2[pall>0]   <- "black"
   pall2[pall==0]  <- "white"

   par(mar=c(0,0,1,0))

   plot.new()
   title(main="Palette of colors()")
   rect(xleft,ybottom,xright,ytop,col=colors())
   text(x=xleft+((1/26)/2)
   ,y=ytop-((1/26)/2)
   ,labels = 1:657
   ,cex=0.55
   ,col=pall2)

   } # close on else
   if(locate==0) print("Palette of colors()")
   else
   {
   colmat    <- matrix(c(1:657,rep(NA,26^2-657)),byrow=T,ncol=26,nrow=26)
   cols        <- NA
   i        <- NA
   for(i in 1:locate)
   {
   h    <- locator(1)
   if(any(h$x<0,h$y<0,h$x>1,h$y>1)) stop("locator out of bounds!")
   else
   {
   cc        <- floor(h$x/(1/26))+1
   rr        <- floor(h$y/(1/26))+1            
   cols[i]    <- .Internal(colors())[colmat[rr,cc]]
   } # close on else
   } # close on i
   return(cols)
   } # close on else
   } # close on else+function

cols <- color(T,8)
colors()
cols
colors()[cols]
cols
cols <- c('red','turquoise','pink','green','orange','black','purple','blue')
legend('topright',legend=vapply(unique(wtplus),function(bw)

wtplus
windowsT
windowsT
plot(psT)
plot(psE)
windowsE
bws[windowsE]
windowsE
bws[0]
bws[0] <- 0
bws[0]
source('src/lso.r')
source('src/lso.r')
c(0,bws)[windowsT+1]
bws[windowsT]
floor(2/2)
rm(list=ls())
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
options()$tikzLatexPackages
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
q('no')
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
source('src/lso.r')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
TeXMetrics
traceback()
knit('sst.Rnw')
traceback()
knit('sst.Rnw')
knit('sst.Rnw')
traceback()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('sst.Rnw')
knit('sst.Rnw')
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
opts_chunk$set(
echo=FALSE, results='asis',cache=FALSE,warning=FALSE,error=FALSE,dev='tikz',message=FALSE,autodep = TRUE
    )
opts_chunk
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
options(tikzDefaultEngine = "pdftex")
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
options( tikzLatexPackages = c(
getOption( "tikzLatexPackages" ),
             "\\usepackage{amsmath,amssymb,amsfonts,amsthm}",
  "\\newcommand{\\dalphaU}{\\bar{\\hat{d}}_\\alpha}",
"\\newcommand{\\dalphaB}{\\underline{\\hat{d}}_\\alpha}",
"\\newcommand{\\dstar}{d^*}",
"\\newcommand{\\ps}{\\bm{p}_D}",
"\\newcommand{\\dhat}{\\hat{d}}",
"\\newcommand{\\dhatU}{\\bar{\\hat{d}}}",
"\\newcommand{\\dhatB}{\\underline{\\hat{d}}}",
             "\\newcommand{\\dhatm}{\\hat{d}_M}",
             "\\usepackage[utf8]{inputenc}","\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}"
))
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
knit('test.Rnw')
q('no')
library(knitr)
knit('test.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
npext
write.table(npext,file='npext.csv',sep=',',row.names=FALSE)
write.table(npext,file='data/npext.csv',sep=',',row.names=FALSE)
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('sst.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
q('no')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
library(knitr)
knit('test.Rnw')
knit('test.Rnw')
knit('test.Rnw')
library(tikzDevice)
tikz(standAlone = FALSE)
plot(1,1)
dev.off()
knit('test.Rnw')
q('no')
